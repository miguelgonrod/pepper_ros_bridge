{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Teleoperation.jsx\";\nimport React, { Component } from \"react\";\nimport Config from \"../scripts/Config\";\nimport { Joystick } from 'react-joystick-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Teleoperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"Connection established in Teleoperation Component\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"Connection is closed in Teleoperation Component\");\n      this.setState({\n        connected: false\n      });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(error);\n          console.log(\"Connection Problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://192.168.0.14:9090\");\n    } catch (error) {\n      console.log(\"Connection Problem\");\n    }\n  }\n  handleMove(event) {\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 3,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 3\n      }\n    });\n    cmd_vel.publish(twist);\n  }\n  handleStop(event) {\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    });\n    cmd_vel.publish(twist);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 100,\n        sticky: true,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default Teleoperation;","map":{"version":3,"names":["React","Component","Config","Joystick","jsxDEV","_jsxDEV","Teleoperation","constructor","state","ros","init_connection","handleMove","bind","handleStop","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","event","cmd_vel","Topic","name","CMD_VEL_TOPIC","messageType","twist","Message","linear","x","y","z","angular","publish","render","children","size","sticky","baseColor","stickColor","move","stop","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Teleoperation.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Config from \"../scripts/Config\";\nimport { Joystick } from 'react-joystick-component';\n\nclass Teleoperation extends Component{\n    state = {ros: null};\n\n    constructor() {\n        super();\n        this.init_connection(); \n\n        this.handleMove = this.handleMove.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", ()=> {\n            console.log(\"Connection established in Teleoperation Component\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", ()=>{\n            console.log(\"Connection is closed in Teleoperation Component\");\n            this.setState({connected: false});\n            //try to reconnect every 3 seconds\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n                }\n                catch(error){\n                    console.log(error);\n                    console.log(\"Connection Problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            this.state.ros.connect(\"ws://192.168.0.14:9090\");\n        }\n        catch(error){\n            console.log(\"Connection Problem\");\n        }\n    }\n\n    handleMove(event){\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x: event.y / 3,\n                y: 0,\n                z: 0,\n            },\n            angular: {\n                x: 0,\n                y: 0,\n                z: -event.x / 3,\n            },\n        });\n\n        cmd_vel.publish(twist);\n    }\n    handleStop(event){\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n            angular: {\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n        });\n\n        cmd_vel.publish(twist);\n    }\n\n    render(){\n        return ( \n        <div>\n            <Joystick \n              size={100} \n              sticky={true} \n              baseColor=\"#EEEEEE\" \n              stickColor=\"#BBBBBB\" \n              move={this.handleMove} \n              stop={this.handleStop}\n            ></Joystick>\n        </div>);\n    }\n}\n\nexport default Teleoperation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}