{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Map.jsx\";\nimport React, { Component } from \"react\";\nimport Config from \"../scripts/Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.view_map = this.view_map.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"cannot connect to the WA robot. Try again after 1 second\");\n    }\n  }\n  componentDidMount() {\n    this.init_connection();\n    this.view_map();\n  }\n  view_map() {\n    var viewer = new window.ROS2D.Viewer({\n      divID: \"nav_div\",\n      width: 640,\n      height: 480\n    });\n    var navClient = new window.NAV2D.OccupancyGridClientNav({\n      ros: this.state.ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      serverName: \"/move_base\",\n      withOrientation: true\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nav_div\",\n        children: \"Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Map;","map":{"version":3,"names":["React","Component","Config","jsxDEV","_jsxDEV","Map","constructor","state","ros","init_connection","view_map","bind","window","ROSLIB","Ros","console","log","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","componentDidMount","viewer","ROS2D","Viewer","divID","width","height","navClient","NAV2D","OccupancyGridClientNav","rootObject","scene","serverName","withOrientation","render","children","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Map.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport Config from \"../scripts/Config\";\n\nclass Map extends Component {\n    state = {\n        ros: null\n    };\n\n    constructor() {\n        super();\n        this.init_connection();\n        this.view_map = this.view_map.bind(this);\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n        try{\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        }\n        catch (error){\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n            console.log(\"cannot connect to the WA robot. Try again after 1 second\");\n        }\n    }\n\n    componentDidMount(){\n        this.init_connection();\n        this.view_map();\n    }\n\n    view_map(){\n        var viewer = new window.ROS2D.Viewer({\n            divID: \"nav_div\",\n            width: 640,\n            height: 480,\n        });\n\n        var navClient = new window.NAV2D.OccupancyGridClientNav({\n            ros: this.state.ros,\n            rootObject: viewer.scene,\n            viewer: viewer,\n            serverName: \"/move_base\",\n            withOrientation: true,\n        });\n    }\n\n    render(){\n        return (\n            <div>\n                <div id=\"nav_div\">Viewer</div>\n            </div>\n        );\n    }\n}\n\nexport default Map;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAKxBK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAAC,KALZC,KAAK,GAAG;MACJC,GAAG,EAAE;IACT,CAAC;IAIG,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EAEAF,eAAeA,CAAA,EAAE;IACb,IAAI,CAACF,KAAK,CAACC,GAAG,GAAG,IAAII,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,KAAK,CAACC,GAAG,CAAC;IAC3B,IAAG;MACC,IAAI,CAACD,KAAK,CAACC,GAAG,CAACS,OAAO,CAAC,OAAO,GAAGf,MAAM,CAACgB,mBAAmB,GAAG,GAAG,GAAGhB,MAAM,CAACiB,qBAAqB,GAAG,EAAE,CAAC;IAC1G,CAAC,CACD,OAAOC,KAAK,EAAC;MACT,IAAI,CAACb,KAAK,CAACC,GAAG,CAACS,OAAO,CAAC,OAAO,GAAGf,MAAM,CAACgB,mBAAmB,GAAG,GAAG,GAAGhB,MAAM,CAACiB,qBAAqB,GAAG,EAAE,CAAC;MACtGJ,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;IAC3E;EACJ;EAEAK,iBAAiBA,CAAA,EAAE;IACf,IAAI,CAACZ,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB;EAEAA,QAAQA,CAAA,EAAE;IACN,IAAIY,MAAM,GAAG,IAAIV,MAAM,CAACW,KAAK,CAACC,MAAM,CAAC;MACjCC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACZ,CAAC,CAAC;IAEF,IAAIC,SAAS,GAAG,IAAIhB,MAAM,CAACiB,KAAK,CAACC,sBAAsB,CAAC;MACpDtB,GAAG,EAAE,IAAI,CAACD,KAAK,CAACC,GAAG;MACnBuB,UAAU,EAAET,MAAM,CAACU,KAAK;MACxBV,MAAM,EAAEA,MAAM;MACdW,UAAU,EAAE,YAAY;MACxBC,eAAe,EAAE;IACrB,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAE;IACJ,oBACI/B,OAAA;MAAAgC,QAAA,eACIhC,OAAA;QAAKiC,EAAE,EAAC,SAAS;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAEd;AACJ;AAEA,eAAepC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}