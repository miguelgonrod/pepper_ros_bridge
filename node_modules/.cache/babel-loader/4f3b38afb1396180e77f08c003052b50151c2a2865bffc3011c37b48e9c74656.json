{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Connection.jsx\";\nimport React, { Component } from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Connection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      connected: false,\n      ros: null\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"Connection established\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"Connection is closed\");\n      this.setState({\n        connected: false\n      });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(error);\n          console.log(\"Connection Problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"Connection Problem\");\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"text-center m-3\",\n        variant: this.state.connected ? \"success\" : \"danger\",\n        children: this.state.connected ? \"Robot connected\" : \"Robot Disconnected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Connection;","map":{"version":3,"names":["React","Component","Alert","Config","jsxDEV","_jsxDEV","Connection","constructor","state","connected","ros","init_connection","window","ROSLIB","Ros","console","log","on","setState","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","render","children","className","variant","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Connection.jsx"],"sourcesContent":["\nimport React, {Component} from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/Config\";\n\nclass Connection extends Component{\n    state = { connected: false, ros: null}\n\n    constructor() {\n        super();\n        this.init_connection(); \n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", ()=> {\n            console.log(\"Connection established\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", ()=>{\n            console.log(\"Connection is closed\");\n            this.setState({connected: false});\n            //try to reconnect every 3 seconds\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n                }\n                catch(error){\n                    console.log(error);\n                    console.log(\"Connection Problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        }\n        catch(error){\n            console.log(\"Connection Problem\");\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <Alert className=\"text-center m-3\" variant={this.state.connected ? \"success\" : \"danger\"}>{this.state.connected ? \"Robot connected\" : \"Robot Disconnected\"}</Alert>\n            </div>\n        );\n    }\n}\n\nexport default Connection;"],"mappings":";AACA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,SAASL,SAAS;EAG9BM,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAAC,KAHZC,KAAK,GAAG;MAAEC,SAAS,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAI,CAAC;IAIlC,IAAI,CAACC,eAAe,CAAC,CAAC;EAC1B;EAEAA,eAAeA,CAAA,EAAE;IACb,IAAI,CAACH,KAAK,CAACE,GAAG,GAAG,IAAIE,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAACE,GAAG,CAAC;IAE3B,IAAI,CAACF,KAAK,CAACE,GAAG,CAACO,EAAE,CAAC,YAAY,EAAE,MAAK;MACjCF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAI,CAACE,QAAQ,CAAC;QAACT,SAAS,EAAE;MAAI,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACD,KAAK,CAACE,GAAG,CAACO,EAAE,CAAC,OAAO,EAAE,MAAI;MAC3BF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,IAAI,CAACE,QAAQ,CAAC;QAACT,SAAS,EAAE;MAAK,CAAC,CAAC;MACjC;MACAU,UAAU,CAAC,MAAI;QACX,IAAG;UACC,IAAI,CAACX,KAAK,CAACE,GAAG,CAACU,OAAO,CAAC,OAAO,GAAGjB,MAAM,CAACkB,mBAAmB,GAAG,GAAG,GAAGlB,MAAM,CAACmB,qBAAqB,GAAG,EAAE,CAAC;QAC1G,CAAC,CACD,OAAMC,KAAK,EAAC;UACRR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;UAClBR,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACrC;MACJ,CAAC,EAAEb,MAAM,CAACqB,kBAAkB,CAAC;IACjC,CAAC,CAAC;IAEF,IAAG;MACC,IAAI,CAAChB,KAAK,CAACE,GAAG,CAACU,OAAO,CAAC,OAAO,GAAGjB,MAAM,CAACkB,mBAAmB,GAAG,GAAG,GAAGlB,MAAM,CAACmB,qBAAqB,GAAG,EAAE,CAAC;IAC1G,CAAC,CACD,OAAMC,KAAK,EAAC;MACRR,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC;EACJ;EAEAS,MAAMA,CAAA,EAAE;IACJ,oBACIpB,OAAA;MAAAqB,QAAA,eACIrB,OAAA,CAACH,KAAK;QAACyB,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAE,IAAI,CAACpB,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,QAAS;QAAAiB,QAAA,EAAE,IAAI,CAAClB,KAAK,CAACC,SAAS,GAAG,iBAAiB,GAAG;MAAoB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjK,CAAC;EAEd;AACJ;AAEA,eAAe1B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}