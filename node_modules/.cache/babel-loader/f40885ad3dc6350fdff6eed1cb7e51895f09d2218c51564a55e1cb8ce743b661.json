{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Map.jsx\";\nimport React, { Component } from \"react\";\nimport Config from \"../scripts/Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.view_map = this.view_map.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"Connection established in Teleoperation Component\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"Connection is closed in Teleoperation Component\");\n      this.setState({\n        connected: false\n      });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(error);\n          console.log(\"Connection Problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"Connection Problem\");\n    }\n  }\n  componentDidMount() {\n    this.init_connection();\n    this.view_map();\n  }\n  view_map() {\n    var viewer = window.ROS2D.Viewer({\n      divId: \"nav_div\",\n      width: 640,\n      height: 480\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nav_div\",\n        children: \"Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Map;","map":{"version":3,"names":["React","Component","Config","jsxDEV","_jsxDEV","Map","constructor","state","ros","view_map","bind","init_connection","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","componentDidMount","viewer","ROS2D","Viewer","divId","width","height","render","children","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Map.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport Config from \"../scripts/Config\";\n\nclass Map extends Component {\n    state = {\n        ros: null,\n    };\n\n    \n    constructor() {\n        super();\n        this.view_map = this.view_map.bind(this);\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", ()=> {\n            console.log(\"Connection established in Teleoperation Component\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", ()=>{\n            console.log(\"Connection is closed in Teleoperation Component\");\n            this.setState({connected: false});\n            //try to reconnect every 3 seconds\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n                }\n                catch(error){\n                    console.log(error);\n                    console.log(\"Connection Problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        }\n        catch(error){\n            console.log(\"Connection Problem\");\n        }\n    }\n\n    componentDidMount(){\n        this.init_connection();\n\n        this.view_map();\n    }\n\n    view_map(){\n        var viewer = window.ROS2D.Viewer({\n            divId: \"nav_div\",\n            width:640,\n            height: 480,\n        });\n\n        \n    }\n\n\n    render(){\n        return (\n            <div>\n                <div id=\"nav_div\">Viewer</div>\n            </div>\n        );\n    }\n}\n\nexport default Map;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAMxBK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAAC,KANZC,KAAK,GAAG;MACJC,GAAG,EAAE;IACT,CAAC;IAKG,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EAEAC,eAAeA,CAAA,EAAE;IACb,IAAI,CAACJ,KAAK,CAACC,GAAG,GAAG,IAAII,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,KAAK,CAACC,GAAG,CAAC;IAE3B,IAAI,CAACD,KAAK,CAACC,GAAG,CAACS,EAAE,CAAC,YAAY,EAAE,MAAK;MACjCF,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;MAChE,IAAI,CAACE,QAAQ,CAAC;QAACC,SAAS,EAAE;MAAI,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACZ,KAAK,CAACC,GAAG,CAACS,EAAE,CAAC,OAAO,EAAE,MAAI;MAC3BF,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;MAC9D,IAAI,CAACE,QAAQ,CAAC;QAACC,SAAS,EAAE;MAAK,CAAC,CAAC;MACjC;MACAC,UAAU,CAAC,MAAI;QACX,IAAG;UACC,IAAI,CAACb,KAAK,CAACC,GAAG,CAACa,OAAO,CAAC,OAAO,GAAGnB,MAAM,CAACoB,mBAAmB,GAAG,GAAG,GAAGpB,MAAM,CAACqB,qBAAqB,GAAG,EAAE,CAAC;QAC1G,CAAC,CACD,OAAMC,KAAK,EAAC;UACRT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;UAClBT,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACrC;MACJ,CAAC,EAAEd,MAAM,CAACuB,kBAAkB,CAAC;IACjC,CAAC,CAAC;IAEF,IAAG;MACC,IAAI,CAAClB,KAAK,CAACC,GAAG,CAACa,OAAO,CAAC,OAAO,GAAGnB,MAAM,CAACoB,mBAAmB,GAAG,GAAG,GAAGpB,MAAM,CAACqB,qBAAqB,GAAG,EAAE,CAAC;IAC1G,CAAC,CACD,OAAMC,KAAK,EAAC;MACRT,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC;EACJ;EAEAU,iBAAiBA,CAAA,EAAE;IACf,IAAI,CAACf,eAAe,CAAC,CAAC;IAEtB,IAAI,CAACF,QAAQ,CAAC,CAAC;EACnB;EAEAA,QAAQA,CAAA,EAAE;IACN,IAAIkB,MAAM,GAAGf,MAAM,CAACgB,KAAK,CAACC,MAAM,CAAC;MAC7BC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAC,GAAG;MACTC,MAAM,EAAE;IACZ,CAAC,CAAC;EAGN;EAGAC,MAAMA,CAAA,EAAE;IACJ,oBACI7B,OAAA;MAAA8B,QAAA,eACI9B,OAAA;QAAK+B,EAAE,EAAC,SAAS;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAEd;AACJ;AAEA,eAAelC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}