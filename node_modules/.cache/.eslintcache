[{"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/index.js":"1","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/App.js":"2","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/reportWebVitals.js":"3","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Body.jsx":"4","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Header.jsx":"5","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Footer.jsx":"6","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/About.jsx":"7","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Home.jsx":"8","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Connection.jsx":"9","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Teleoperation.jsx":"10","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/scripts/Config.js":"11","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/RobotState.jsx":"12","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Map.jsx":"13","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Text.jsx":"14"},{"size":578,"mtime":1682888103365,"results":"15","hashOfConfig":"16"},{"size":271,"mtime":1682883933188,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1682883381374,"results":"18","hashOfConfig":"16"},{"size":626,"mtime":1682884016815,"results":"19","hashOfConfig":"16"},{"size":720,"mtime":1682884016819,"results":"20","hashOfConfig":"16"},{"size":317,"mtime":1683261190782,"results":"21","hashOfConfig":"16"},{"size":472,"mtime":1683261419892,"results":"22","hashOfConfig":"16"},{"size":1377,"mtime":1683262054109,"results":"23","hashOfConfig":"16"},{"size":1643,"mtime":1683120871318,"results":"24","hashOfConfig":"16"},{"size":2897,"mtime":1683121216704,"results":"25","hashOfConfig":"16"},{"size":239,"mtime":1683255387739,"results":"26","hashOfConfig":"16"},{"size":3828,"mtime":1683127472738,"results":"27","hashOfConfig":"16"},{"size":237,"mtime":1683260423163,"results":"28","hashOfConfig":"16"},{"size":537,"mtime":1683262489809,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1k04xde",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/index.js",[],[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/App.js",[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/reportWebVitals.js",[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Body.jsx",[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Header.jsx",[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Footer.jsx",[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/About.jsx",[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Home.jsx",["76","77"],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Connection.jsx",["78"],[],"\nimport React, {Component} from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/Config\";\n\nclass Connection extends Component{\n    state = { connected: false, ros: null}\n\n    constructor() {\n        super();\n        this.init_connection(); \n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", ()=> {\n            console.log(\"Connection established\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", ()=>{\n            console.log(\"Connection is closed\");\n            this.setState({connected: false});\n            //try to reconnect every 3 seconds\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n                }\n                catch(error){\n                    console.log(error);\n                    console.log(\"Connection Problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        }\n        catch(error){\n            console.log(\"Connection Problem\");\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <Alert className=\"text-center m-3\" variant={this.state.connected ? \"success\" : \"danger\"}>{this.state.connected ? \"Robot connected\" : \"Robot Disconnected\"}</Alert>\n            </div>\n        );\n    }\n}\n\nexport default Connection;","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Teleoperation.jsx",["79"],[],"import React, { Component } from \"react\";\nimport Config from \"../scripts/Config\";\nimport { Joystick } from 'react-joystick-component';\n\nclass Teleoperation extends Component{\n    state = {ros: null};\n\n    constructor() {\n        super();\n        this.init_connection(); \n\n        this.handleMove = this.handleMove.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", ()=> {\n            console.log(\"Connection established in Teleoperation Component\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", ()=>{\n            console.log(\"Connection is closed in Teleoperation Component\");\n            this.setState({connected: false});\n            //try to reconnect every 3 seconds\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n                }\n                catch(error){\n                    console.log(error);\n                    console.log(\"Connection Problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        }\n        catch(error){\n            console.log(\"Connection Problem\");\n        }\n    }\n\n    handleMove(event){\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x: event.y / 3,\n                y: 0,\n                z: 0,\n            },\n            angular: {\n                x: 0,\n                y: 0,\n                z: -event.x,\n            },\n        });\n\n        cmd_vel.publish(twist);\n    }\n    handleStop(event){\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n\n        var twist = new window.ROSLIB.Message({\n            linear:{\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n            angular: {\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n        });\n\n        cmd_vel.publish(twist);\n    }\n\n    render(){\n        return ( \n        <div>\n            <Joystick \n              size={100} \n              sticky={true} \n              baseColor=\"#EEEEEE\" \n              stickColor=\"#BBBBBB\" \n              move={this.handleMove} \n              stop={this.handleStop}\n            ></Joystick>\n        </div>);\n    }\n}\n\nexport default Teleoperation;","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/scripts/Config.js",[],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/RobotState.jsx",["80","81","82"],[],"import React, {Component} from \"react\";\nimport {Row, Col, Container, Button} from \"react-bootstrap\";\nimport Config from \"../scripts/Config\";\nimport * as Three from \"three\";\n\nclass RobotState extends Component{\n    state = {\n        ros:null,\n        x:0,\n        y:0,\n        orientation: 0,\n        linearVelocity:0,\n        angularVelocity:0,\n    };\n\n    constructor() {\n        super();\n        this.init_connection(); \n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", ()=> {\n            console.log(\"Connection established in Teleoperation Component\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", ()=>{\n            console.log(\"Connection is closed in Teleoperation Component\");\n            this.setState({connected: false});\n            //try to reconnect every 3 seconds\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n                }\n                catch(error){\n                    console.log(error);\n                    console.log(\"Connection Problem\");\n                }\n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        }\n        catch(error){\n            console.log(\"Connection Problem\");\n        }\n    }\n\n    componentDidMount(){\n        this.getRobotState();\n    }\n\n    getRobotState(){\n        var pose_subscriber = new window.ROSLIB.Topic({\n            ros:this.state.ros,\n            name: Config.POSITION_TOPIC,\n            messageType: \"geometry_msgs/PoseWithCovarianceStamped\",\n        });\n\n        pose_subscriber.subscribe((message)=>{\n            this.setState({x: message.pose.pose.position.x.toFixed(2)});\n            this.setState({y: message.pose.pose.position.y.toFixed(2)});\n            this.setState({orientation: this.getOrientationFromQuaternion(message.pose.pose.orientation).toFixed(2)});\n        });\n\n        var velocity_subscriber = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.ODOM_TOPIC,\n            messageType: \"nav_msgs/Odometry\",\n        });\n\n        velocity_subscriber.subscribe((message) => {\n            this.setState({linearVelocity: message.twist.twist.linear.x.toFixed(2)});\n            this.setState({angularVelocity: message.twist.twist.angular.z.toFixed(2)});\n        });\n    }\n\n    getOrientationFromQuaternion(ros_orientation_quaternion){\n        var q = new Three.Quaternion(ros_orientation_quaternion.x,\n            ros_orientation_quaternion.y,\n            ros_orientation_quaternion.z,\n            ros_orientation_quaternion.w\n            );\n\n            var RPY = new Three.Euler().setFromQuaternion(q);\n\n            return RPY[\"_z\"] * (180 / Math.PI);\n    }\n\n    render(){\n        return(\n            <div>\n                <Row>\n                    <Col>\n                        <h4 className=\"mt-4\">Position</h4>\n                        <p className=\"mt-0\">x: {this.state.x}</p>\n                        <p className=\"mt-0\">y: {this.state.y}</p>\n                        <p className=\"mt-0\">Orientation: {this.state.orientation}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h4 className=\"mt-4\">Velocities</h4>\n                        <p className=\"mt-0\">Linear Velocity: {this.state.linearVelocity}</p>\n                        <p className=\"mt-0\">Angular Velocity: {this.state.angularVelocity}</p>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default RobotState;","/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Map.jsx",["83"],[],"/home/miguel/Escritorio/Universidad/RAS/rosBridgePepper/new-pepper-bridge/src/components/Text.jsx",["84"],[],{"ruleId":"85","severity":1,"message":"86","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":11},{"ruleId":"85","severity":1,"message":"89","line":7,"column":30,"nodeType":"87","messageId":"88","endLine":7,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":15,"column":9,"nodeType":"92","messageId":"93","endLine":15,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":17,"column":9,"nodeType":"92","messageId":"93","endLine":17,"endColumn":19},{"ruleId":"85","severity":1,"message":"94","line":2,"column":19,"nodeType":"87","messageId":"88","endLine":2,"endColumn":28},{"ruleId":"85","severity":1,"message":"89","line":2,"column":30,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":22,"column":9,"nodeType":"92","messageId":"93","endLine":22,"endColumn":19},{"ruleId":"85","severity":1,"message":"95","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"96","line":6,"column":10},"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Container' is defined but never used.","'Config' is defined but never used.","Parsing error: Unexpected token (6:10)"]